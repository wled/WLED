<!DOCTYPE html>
<html lang="en">
<head>
	<meta content="width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=no" name="viewport">
	<meta charset="utf-8">
	<title>Time Settings</title>
	<script src="common.js" async type="text/javascript"></script>
	<script>
	var el=false;
	var ms=["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"];
	var maxTimePresets = 32;
	var currentPresetCount = 0;
	
	function S() {
		getLoc();
		loadJS(getURL('/settings/s.js?p=5'), false, ()=>{
			// Initialize currentPresetCount from server data
			if (typeof d !== 'undefined' && d.Sf) {
				for (let i = 0; i < maxTimePresets; i++) {
					if (d.Sf[`W${i}`] && d.Sf[`W${i}`].value) {
						currentPresetCount = i + 1;
					}
				}
			}
			BTa();
		}, ()=>{
			updLatLon();
			Cs();
		});
		if (loc) d.Sf.action = getURL('/settings/time');
	}
	function expand(o,i)
	{
		var t = gId("WD"+i);
		t.style.display = t.style.display!=="none" ? "none" : "";
		o.innerHTML = t.style.display==="none" ? "&#128197;" : "&#x2715;";
	}
	function Cs() { gId("cac").style.display=(gN("OL").checked)?"block":"none"; }
	function BTa() {
		var ih = "<thead><tr><th>En.</th><th>Hour</th><th>Minute</th><th>Preset</th><th></th></tr></thead><tbody>";
		
		// Start with at least 1 timer row
		currentPresetCount = Math.max(1, currentPresetCount);
		
		for (var i = 0; i < currentPresetCount; i++) {
			// Extract existing timer data from server if available
			var timerData = null;
			if (typeof d !== 'undefined' && d.Sf) {
				var weekdaysValue = d.Sf[`W${i}`] ? d.Sf[`W${i}`].value : null;
				if (weekdaysValue !== null) {
					timerData = {
						enabled: (weekdaysValue & 0x01) !== 0,
						hour: d.Sf[`H${i}`] ? d.Sf[`H${i}`].value : '',
						minute: d.Sf[`N${i}`] ? d.Sf[`N${i}`].value : '',
						preset: d.Sf[`T${i}`] ? d.Sf[`T${i}`].value : '',
						weekdays: parseInt(weekdaysValue) || 0x7F,
						monthStart: d.Sf[`M${i}`] ? parseInt(d.Sf[`M${i}`].value) : 1,
						dayStart: d.Sf[`D${i}`] ? parseInt(d.Sf[`D${i}`].value) : 1,
						monthEnd: d.Sf[`P${i}`] ? parseInt(d.Sf[`P${i}`].value) : 12,
						dayEnd: d.Sf[`E${i}`] ? parseInt(d.Sf[`E${i}`].value) : 31
					};
				}
			}
			ih += generatePresetRow(i, timerData);
		}
		
		ih += "</tbody>";
		gId("TMT").innerHTML = ih;
		updateButtonStates();
	}

	function generatePresetRow(i, timerData) {
		var ih = "";
		
		// Get existing values or use defaults
		var enabled = timerData && timerData.enabled !== undefined ? timerData.enabled : true;
		var hour = timerData && timerData.hour !== undefined ? timerData.hour : '';
		var minute = timerData && timerData.minute !== undefined ? timerData.minute : '';
		var preset = timerData && timerData.preset !== undefined ? timerData.preset : '';
		var weekdays = timerData && timerData.weekdays !== undefined ? timerData.weekdays : 0x7F; // All days by default
		var monthStart = timerData && timerData.monthStart !== undefined ? timerData.monthStart : 1;
		var dayStart = timerData && timerData.dayStart !== undefined ? timerData.dayStart : 1;
		var monthEnd = timerData && timerData.monthEnd !== undefined ? timerData.monthEnd : 12;
		var dayEnd = timerData && timerData.dayEnd !== undefined ? timerData.dayEnd : 31;
		
		ih += `<tr><td><input name="W${i}" id="W${i}" type="hidden"><input id="W${i}0" type="checkbox" ${enabled ? 'checked' : ''}></td>`;
		ih += `<td><input name="H${i}" class="xs" type="number" min="0" max="23" value="${hour}"></td>`;
		ih += `<td><input name="N${i}" class="xs" type="number" min="0" max="59" value="${minute}"></td>`;
		ih += `<td><input name="T${i}" class="s" type="number" min="0" max="250" value="${preset}"></td>`;
		ih += `<td><div id="CB${i}" onclick="expand(this,${i})" class="cal">&#128197;</div></td></tr>`;
		
		ih += `<tr><td colspan=5><div id="WD${i}" style="display:none;background-color:#444;"><hr>`;
		ih += `<div style="text-align:center;">Run on weekdays<br>`;
		ih += `<table style="margin:10px auto;"><tr><th>M</th><th>T</th><th>W</th><th>T</th><th>F</th><th>S</th><th>S</th></tr><tr>`;
		for (var j=1;j<8;j++) {
			var dayChecked = (weekdays & (1 << (j-1))) ? 'checked' : '';
			ih += `<td><input id="W${i}${j}" type="checkbox" ${dayChecked}></td>`;
		}
		ih += "</tr></table>";
		
		ih += `from <select name="M${i}">`;
		for (var j=0;j<12;j++) {
			var monthStartSelected = (j+1 === monthStart) ? 'selected' : '';
			ih += `<option value="${j+1}" ${monthStartSelected}>${ms[j]}</option>`;
		}
		ih += `</select><input name="D${i}" class="xs" type="number" min="1" max="31" value="${dayStart}"> to <select name="P${i}">`;
		for (var j=0;j<12;j++) {
			var monthEndSelected = (j+1 === monthEnd) ? 'selected' : '';
			ih += `<option value="${j+1}" ${monthEndSelected}>${ms[j]}</option>`;
		}
		ih += `</select><input name="E${i}" class="xs" type="number" min="1" max="31" value="${dayEnd}">`;
		ih += "</div><hr></div></td></tr>";
		
		return ih;
	}

	function addTimePreset() {
		if (currentPresetCount >= maxTimePresets) return;
		
		var table = gId("TMT");
		var tbody = table.querySelector("tbody");
		var newRowHTML = generatePresetRow(currentPresetCount);
		tbody.insertAdjacentHTML("beforeend", newRowHTML);
		
		currentPresetCount++;
		updateButtonStates();
	}

	function removeLastPreset() {
		if (currentPresetCount <= 1) return;
		
		// Remove the last 2 rows (main + detail) from tbody
		var table = gId("TMT");
		var tbody = table.querySelector("tbody");
		var rows = tbody.rows;
		if (rows.length >= 2) {
			tbody.deleteRow(rows.length - 1);
			tbody.deleteRow(rows.length - 1);
		}
		
		currentPresetCount--;
		updateButtonStates();
	}

	function updateButtonStates() {
		gId("btnAddTimer").style.display = (currentPresetCount<maxTimePresets) ? "inline":"none";
		gId("btnRemoveTimer").style.display = (currentPresetCount>1) ? "inline":"none";
	}
	
	function Wd() {
		a = [];
		for (i=0; i<currentPresetCount; i++) {
			a[i] = 0;
			if (gId("W"+i+"0").checked) a[i] |= 0x01;
			for (j=1; j<=7; j++) {
				if (gId("W"+i+j).checked) a[i] |= (1 << j);
			}
			gId("W"+i).value = a[i];
		}
		if (d.Sf.LTR.value==="S") { d.Sf.LT.value = -1*parseFloat(d.Sf.LT.value); }
		if (d.Sf.LNR.value==="W") { d.Sf.LN.value = -1*parseFloat(d.Sf.LN.value); }
	}
	function addRow(i,p,l,d) {
		var t = gId("macros");	// table
		var rCnt = t.rows.length;   // get the number of rows.
		var tr = t.insertRow(rCnt); // table row.
		var b = String.fromCharCode((i<10?48:55)+i);
		var td = document.createElement('td');          // TABLE DEFINITION.
		td = tr.insertCell(0);
		td.innerHTML = `Button ${i}:`;
		td = tr.insertCell(1);
		td.innerHTML = `<input name="MP${b}" type="number" class="s" min="0" max="250" value="${p}" required>`;
		td = tr.insertCell(2);
		td.innerHTML = `<input name="ML${b}" type="number" class="s" min="0" max="250" value="${l}" required>`;
		td = tr.insertCell(3);
		td.innerHTML = `<input name="MD${b}" type="number" class="s" min="0" max="250" value="${d}" required>`;
	}
	function getLatLon() {
		if (!el) {
			window.addEventListener("message", (event) => {
				if (event.origin !== "https://locate.wled.me") return;
				if (event.data instanceof Object) {
					d.Sf.LT.value = event.data.lat;
					d.Sf.LN.value = event.data.lon;
					updLatLon();
				}
			}, false);
			el = true;
		}
		window.open("https://locate.wled.me","_blank");
	}
	function updLatLon(i) {
		if (parseFloat(d.Sf.LT.value)<0) { d.Sf.LTR.value = "S"; d.Sf.LT.value = -1*parseFloat(d.Sf.LT.value); } else d.Sf.LTR.value = "N";
		if (parseFloat(d.Sf.LN.value)<0) { d.Sf.LNR.value = "W"; d.Sf.LN.value = -1*parseFloat(d.Sf.LN.value); } else d.Sf.LNR.value = "E";
	}
	
	// Sunrise/Sunset timer functions
	function expandSunrise(o) {
		var t = gId("SR_WD");
		t.style.display = t.style.display !== "none" ? "none" : "";
		o.innerHTML = t.style.display === "none" ? "&#128197;" : "&#x2715;";
	}
	
	function expandSunset(o) {
		var t = gId("SS_WD");
		t.style.display = t.style.display !== "none" ? "none" : "";
		o.innerHTML = t.style.display === "none" ? "&#128197;" : "&#x2715;";
	}
	
	// Process sunrise/sunset timer data before form submission
	function processSunriseSunsetTimers() {
		// Process Sunrise timer
		var srEnabled = gId("SR_W0").checked;
		var srWeekdays = 0;
		for (var j = 1; j < 8; j++) {
			if (gId("SR_W" + j).checked) srWeekdays |= (1 << (j - 1));
		}
		srWeekdays <<= 1; // Shift to make room for enabled bit
		if (srEnabled) srWeekdays |= 0x01; // Set enabled bit
		gId("SR_W").value = srWeekdays;
		
		// Process Sunset timer
		var ssEnabled = gId("SS_W0").checked;
		var ssWeekdays = 0;
		for (var j = 1; j < 8; j++) {
			if (gId("SS_W" + j).checked) ssWeekdays |= (1 << (j - 1));
		}
		ssWeekdays <<= 1; // Shift to make room for enabled bit
		if (ssEnabled) ssWeekdays |= 0x01; // Set enabled bit
		gId("SS_W").value = ssWeekdays;
	}
	</script>
	<style>@import url("style.css");</style>
</head>
<body onload="S()">
	<form id="form_s" name="Sf" method="post" onsubmit="Wd(); processSunriseSunsetTimers()">
		<div class="toprow">
		<div class="helpB"><button type="button" onclick="H('features/settings/#time-settings')">?</button></div>
		<button type="button" onclick="B()">Back</button><button type="submit">Save</button><hr>
		</div>
		<h2>Time setup</h2>
		Get time from NTP server: <input type="checkbox" name="NT"><br>
		<input type="text" name="NS" maxlength="32"><br>
		Use 24h format: <input type="checkbox" name="CF"><br>
		Time zone: 
		<select name="TZ">
			<option value="0" selected>GMT(UTC)</option>
			<option value="1">GMT/BST</option>
			<option value="2">CET/CEST</option>
			<option value="3">EET/EEST</option>
			<option value="4">US-EST/EDT</option>
			<option value="5">US-CST/CDT</option>
			<option value="6">US-MST/MDT</option>
			<option value="7">US-AZ</option>
			<option value="8">US-PST/PDT</option>
			<option value="9">CST (AWST, PHST)</option>
			<option value="10">JST (KST)</option>
			<option value="11">AEST/AEDT</option>
			<option value="12">NZST/NZDT</option>
			<option value="13">North Korea</option>
			<option value="14">IST (India)</option>
			<option value="15">CA-Saskatchewan</option>
			<option value="16">ACST</option>
			<option value="17">ACST/ACDT</option>
			<option value="18">HST (Hawaii)</option>
			<option value="19">NOVT (Novosibirsk)</option>
			<option value="20">AKST/AKDT (Anchorage)</option>
			<option value="21">MX-CST</option>
			<option value="22">PKT (Pakistan)</option>
			<option value="23">BRT (Brasília)</option>
		</select><br>
		UTC offset: <input name="UO" type="number" min="-65500" max="65500" required> seconds (max. 18 hours)<br>
		Current local time is <span class="times">unknown</span>.<br>
		Latitude: <select name="LTR"><option value="N">N</option><option value="S">S</option></select><input name="LT" type="number" class="xl" min="0" max="66.6" step="0.01"><br>
		Longitude: <select name="LNR"><option value="E">E</option><option value="W">W</option></select><input name="LN" type="number" class="xl" min="0" max="180" step="0.01"><br>
		<button type="button" id="locbtn" onclick="getLatLon()">Get location</button>
		<div><i>(opens new tab, only works in browser)</i></div>
		<div id="sun" class="times"></div>
		<h3>Clock</h3>
		Analog Clock overlay: <input type="checkbox" name="OL" onchange="Cs()"><br>
		<div id="cac">
			First LED: <input name="O1" type="number" min="0" max="1024" required> Last LED: <input name="O2" type="number" min="0" max="1024" required><br>
			12h LED: <input name="OM" type="number" min="0" max="1024" required><br>
			Show 5min marks: <input type="checkbox" name="O5"><br>
			Seconds (as trail): <input type="checkbox" name="OS"><br>
			Show clock overlay only if all LEDs are solid black: <input type="checkbox" name="OB"><br>
		</div>
		Countdown Mode: <input type="checkbox" name="CE"><br>
		Countdown Goal:<br>
		Date:&nbsp;<nowrap>20<input name="CY" class="xs" type="number" min="0" max="99" required>-<input name="CI" class="xs" type="number" min="1" max="12" required>-<input name="CD" class="xs" type="number" min="1" max="31" required></nowrap><br>
		Time:&nbsp;<nowrap><input name="CH" class="xs" type="number" min="0" max="23" required>:<input name="CM" class="xs" type="number" min="0" max="59" required>:<input name="CS" class="xs" type="number" min="0" max="59" required></nowrap><br>
		<h3>Macro presets</h3>
		<b>Macros have moved!</b><br>
		<i>Presets now also can be used as macros to save both JSON and HTTP API commands.<br>
		Just enter the preset ID below!</i>
		<i>Use 0 for the default action instead of a preset</i><br>
		Alexa On/Off Preset: <input name="A0" class="m" type="number" min="0" max="250" required> <input name="A1" class="m" type="number" min="0" max="250" required><br>
		Countdown-Over Preset: <input name="MC" class="m" type="number" min="0" max="250" required><br>
		Timed-Light-Over Presets: <input name="MN" class="m" type="number" min="0" max="250" required><br>
		<h3>Button actions</h3>
		<table style="margin: 0 auto;" id="macros">
			<thead>
				<tr>
					<td>push<br>switch</td>
					<td>short<br>on-&gt;off</td>
					<td>long<br>off-&gt;on</td>
					<td>double<br>N/A</td>
				</tr>
			</thead>
			<tbody>
			</tbody>
		</table>
		<a href="https://kno.wled.ge/features/macros/#analog-button" target="_blank">Analog Button setup</a>
		<h3>Sunrise/Sunset Presets</h3>
		<div style="display: inline-block;">
			<table id="SRSS" style="min-width:330px; margin: 0 auto;">
			<thead>
				<tr>
					<th>En.</th>
					<th>Type</th>
					<th>Offset</th>
					<th>Preset</th>
					<th></th>
				</tr>
			</thead>
			<tbody>
				<!-- Sunrise Row -->
				<tr>
					<td><input name="SR_W" id="SR_W" type="hidden"><input id="SR_W0" type="checkbox"></td>
					<td>Sunrise</td>
					<td><input name="SR_N" class="xs" type="number" min="-59" max="59" value="0"></td>
					<td><input name="SR_T" class="s" type="number" min="0" max="250" value="0"></td>
					<td><div id="SR_CB" onclick="expandSunrise(this)" class="cal">&#128197;</div></td>
				</tr>
				<tr>
					<td colspan="5">
						<div id="SR_WD" style="display:none;background-color:#444;"><hr>
							Run on weekdays<br>
							<table style="margin:10px auto; border-collapse: separate; border-spacing: 8px 4px;"><tr><th>M</th><th>T</th><th>W</th><th>T</th><th>F</th><th>S</th><th>S</th></tr><tr>
								<td style="text-align: center;"><input id="SR_W1" type="checkbox" checked></td>
								<td style="text-align: center;"><input id="SR_W2" type="checkbox" checked></td>
								<td style="text-align: center;"><input id="SR_W3" type="checkbox" checked></td>
								<td style="text-align: center;"><input id="SR_W4" type="checkbox" checked></td>
								<td style="text-align: center;"><input id="SR_W5" type="checkbox" checked></td>
								<td style="text-align: center;"><input id="SR_W6" type="checkbox" checked></td>
								<td style="text-align: center;"><input id="SR_W7" type="checkbox" checked></td>
							</tr></table>
							from <select name="SR_M">
								<option value="1" selected>Jan</option>
								<option value="2">Feb</option>
								<option value="3">Mar</option>
								<option value="4">Apr</option>
								<option value="5">May</option>
								<option value="6">Jun</option>
								<option value="7">Jul</option>
								<option value="8">Aug</option>
								<option value="9">Sep</option>
								<option value="10">Oct</option>
								<option value="11">Nov</option>
								<option value="12">Dec</option>
							</select><input name="SR_D" class="xs" type="number" min="1" max="31" value="1"> to <select name="SR_P">
								<option value="1">Jan</option>
								<option value="2">Feb</option>
								<option value="3">Mar</option>
								<option value="4">Apr</option>
								<option value="5">May</option>
								<option value="6">Jun</option>
								<option value="7">Jul</option>
								<option value="8">Aug</option>
								<option value="9">Sep</option>
								<option value="10">Oct</option>
								<option value="11">Nov</option>
								<option value="12" selected>Dec</option>
							</select><input name="SR_E" class="xs" type="number" min="1" max="31" value="31">
						<hr></div>
					</td>
				</tr>
				<!-- Sunset Row -->
				<tr>
					<td><input name="SS_W" id="SS_W" type="hidden"><input id="SS_W0" type="checkbox"></td>
					<td>Sunset</td>
					<td><input name="SS_N" class="xs" type="number" min="-59" max="59" value="0"></td>
					<td><input name="SS_T" class="s" type="number" min="0" max="250" value="0"></td>
					<td><div id="SS_CB" onclick="expandSunset(this)" class="cal">&#128197;</div></td>
				</tr>
				<tr>
					<td colspan="5">
						<div id="SS_WD" style="display:none;background-color:#444;"><hr>
							Run on weekdays<br>
							<table style="margin:10px auto;"><tr><th>M</th><th>T</th><th>W</th><th>T</th><th>F</th><th>S</th><th>S</th></tr><tr>
								<td><input id="SS_W1" type="checkbox" checked></td>
								<td><input id="SS_W2" type="checkbox" checked></td>
								<td><input id="SS_W3" type="checkbox" checked></td>
								<td><input id="SS_W4" type="checkbox" checked></td>
								<td><input id="SS_W5" type="checkbox" checked></td>
								<td><input id="SS_W6" type="checkbox" checked></td>
								<td><input id="SS_W7" type="checkbox" checked></td>
							</tr></table>
							from <select name="SS_M">
								<option value="1" selected>Jan</option>
								<option value="2">Feb</option>
								<option value="3">Mar</option>
								<option value="4">Apr</option>
								<option value="5">May</option>
								<option value="6">Jun</option>
								<option value="7">Jul</option>
								<option value="8">Aug</option>
								<option value="9">Sep</option>
								<option value="10">Oct</option>
								<option value="11">Nov</option>
								<option value="12">Dec</option>
							</select><input name="SS_D" class="xs" type="number" min="1" max="31" value="1"> to <select name="SS_P">
								<option value="1">Jan</option>
								<option value="2">Feb</option>
								<option value="3">Mar</option>
								<option value="4">Apr</option>
								<option value="5">May</option>
								<option value="6">Jun</option>
								<option value="7">Jul</option>
								<option value="8">Aug</option>
								<option value="9">Sep</option>
								<option value="10">Oct</option>
								<option value="11">Nov</option>
								<option value="12" selected>Dec</option>
							</select><input name="SS_E" class="xs" type="number" min="1" max="31" value="31">
						<hr></div>
					</td>
				</tr>
			</tbody>
			</table>
		</div>
		<br>
		<h3>Time-controlled presets</h3>
		<div style="display: inline-block;">
			<table id="TMT" style="min-width:330px; margin: 0 auto;"></table>
			<div style="text-align: center; margin: 10px 0;">
				<button type="button" id="btnAddTimer" onclick="addTimePreset()">+</button>
				<button type="button" id="btnRemoveTimer" onclick="removeLastPreset()">-</button>
			</div>
		</div>
		<hr>
		<button type="button" onclick="B()">Back</button><button type="submit">Save</button>
	</form>
</body>
</html>
